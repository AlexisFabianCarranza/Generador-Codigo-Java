/*
 * Created on 2020-06-09 ( Date ISO 2020-06-09 - Time 12:08:44 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.1.2
 */

package org.demo.persistence.impl.jpa.record;

import java.io.Serializable;

import java.util.Date;

import javax.persistence.*;

/**
 * Persistent class for "Users" entity stored in table "Users" <br>
 * This class is a "record entity" without JPA links  <br>
 *
 * @author Telosys
 *
 */
@Entity
@Table(name="Users", catalog="agser" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="UsersJpaRecord.countAll",  query="SELECT COUNT(x) FROM UsersJpaRecord x" ),
  @NamedQuery ( name="UsersJpaRecord.countById", query="SELECT COUNT(x) FROM UsersJpaRecord x WHERE x.id = ?1 " )
} )
public class UsersJpaRecord implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="id", nullable=false)
    private Integer    id           ; 

    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="name", length=255)
    private String     name         ; 

    @Column(name="email", nullable=false, length=255)
    private String     email        ; 

    @Column(name="password", nullable=false, length=255)
    private String     password     ; 

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="createdAt", nullable=false)
    private Date       createdat    ; 

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="updatedAt", nullable=false)
    private Date       updatedat    ; 


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public UsersJpaRecord() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : name ( VARCHAR ) 
    public void setName( String name ) {
        this.name = name;
    }
    public String getName() {
        return this.name;
    }

    //--- DATABASE MAPPING : email ( VARCHAR ) 
    public void setEmail( String email ) {
        this.email = email;
    }
    public String getEmail() {
        return this.email;
    }

    //--- DATABASE MAPPING : password ( VARCHAR ) 
    public void setPassword( String password ) {
        this.password = password;
    }
    public String getPassword() {
        return this.password;
    }

    //--- DATABASE MAPPING : createdAt ( DATETIME ) 
    public void setCreatedat( Date createdat ) {
        this.createdat = createdat;
    }
    public Date getCreatedat() {
        return this.createdat;
    }

    //--- DATABASE MAPPING : updatedAt ( DATETIME ) 
    public void setUpdatedat( Date updatedat ) {
        this.updatedat = updatedat;
    }
    public Date getUpdatedat() {
        return this.updatedat;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(name);
        sb.append("|");
        sb.append(email);
        sb.append("|");
        sb.append(password);
        sb.append("|");
        sb.append(createdat);
        sb.append("|");
        sb.append(updatedat);
        return sb.toString(); 
    } 

}
