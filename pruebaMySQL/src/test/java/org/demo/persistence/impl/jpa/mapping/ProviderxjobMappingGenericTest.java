/*
 * Created on 2020-06-09 ( Date ISO 2020-06-09 - Time 12:08:44 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.1.2
 */
package org.demo.persistence.impl.jpa.mapping;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertTrue;

import org.demo.data.record.ProviderxjobRecord;
import org.demo.persistence.impl.jpa.record.ProviderxjobJpaRecord ;

/**
 * Generic tests for Providerxjob mapping
 *
 */
public abstract class ProviderxjobMappingGenericTest {

	protected void setMapperProvider(JpaMapperProvider provider) {
		JpaMapping.setMapperProvider(provider);
		System.out.println("Mapper provider set to : " + provider.getClass().getCanonicalName() );
	}
	
	protected void processAllTest() {
		testPojoMapping();
		testEntityMapping();
	}
	
	private ProviderxjobJpaRecord buildJpaRecord() {
		ProviderxjobJpaRecord entity = new ProviderxjobJpaRecord();
		entity.setId(Integer.valueOf(100)); 
		entity.setProviderid(Integer.valueOf(100)); 
		entity.setJobid(Integer.valueOf(100)); 
		return entity ;
	}
	
	private ProviderxjobRecord buildRecord() {
		ProviderxjobRecord pojo = new ProviderxjobRecord();
		pojo.setId(Integer.valueOf(100)); 
		pojo.setProviderid(Integer.valueOf(100)); 
		pojo.setJobid(Integer.valueOf(100)); 
		return pojo ;
	}

	private void checkValues(ProviderxjobRecord r1, ProviderxjobRecord r2) {
		assertTrue(r1 != r2); // different instances
		assertEquals(r1.getId(), r2.getId());
		assertEquals(r1.getProviderid(), r2.getProviderid());
		assertEquals(r1.getJobid(), r2.getJobid());
	}

	private void checkValues(ProviderxjobJpaRecord r1, ProviderxjobJpaRecord r2) {
		assertTrue(r1 != r2); // different instances
		assertEquals(r1.getId(), r2.getId());
		assertEquals(r1.getProviderid(), r2.getProviderid());
		assertEquals(r1.getJobid(), r2.getJobid());
	}
	
	protected void testPojoMapping() {
		System.out.println("Test POJO mapping" );
    	JpaMapper<ProviderxjobJpaRecord,ProviderxjobRecord> mapper = JpaMapping.getMapperProvider().getMapper(ProviderxjobJpaRecord.class, ProviderxjobRecord.class);
    	ProviderxjobRecord pojo1 = buildRecord();
    	ProviderxjobJpaRecord entity = mapper.mapRecordToEntity(pojo1);
    	ProviderxjobRecord pojo2 = mapper.mapEntityToRecord(entity);
    	checkValues(pojo1, pojo2);
    	// Test null 
    	assertNull(mapper.mapRecordToEntity(null));
	}
	
	protected void testEntityMapping() {
		System.out.println("Test ENTITY mapping" );
    	JpaMapper<ProviderxjobJpaRecord,ProviderxjobRecord> mapper = JpaMapping.getMapperProvider().getMapper(ProviderxjobJpaRecord.class, ProviderxjobRecord.class);
		ProviderxjobJpaRecord entity1 = buildJpaRecord();
		ProviderxjobRecord pojo = mapper.mapEntityToRecord(entity1);
		ProviderxjobJpaRecord entity2 = mapper.mapRecordToEntity(pojo);
    	checkValues(entity1, entity2);
    	// Test null 
    	assertNull(mapper.mapEntityToRecord(null));
	}
	
}
